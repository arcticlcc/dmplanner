<?xml version="1.0" encoding="utf-8"?>
<project name="DMPlanner" default=".help">
    <!--
    The build-impl.xml file imported here contains the guts of the build process. It is
    a great idea to read that file to understand how the process works, but it is best to
    limit your changes to this file.
    -->
    <import file="${basedir}/.sencha/app/build-impl.xml"/>

    <!--
    The following targets can be provided to inject logic before and/or after key steps
    of the build process:

    The "init-local" target is used to initialize properties that may be personalized
    for the local machine.

    <target name="-before-init-local"/>
    <target name="-after-init-local"/>

    The "clean" target is used to clean build output from the build.dir.

    <target name="-before-clean"/>
    <target name="-after-clean"/>

    The general "init" target is used to initialize all other properties, including
    those provided by Sencha Cmd.

    <target name="-before-init"/>
    <target name="-after-init"/>

    The "page" target performs the call to Sencha Cmd to build the 'all-classes.js' file.

    <target name="-before-page"/>
    <target name="-after-page"/>

    The "build" target performs the call to Sencha Cmd to build the application.

    <target name="-before-build"/>
    <target name="-after-build"/>
    -->
    <!--
    This target minifies and concatenates the OpenLayers js with the ExtJS js.
    -->
    <target name="-after-page">
        <x-run-if-true value="${enable.openlayers.build}">
            <move file="${build.classes.file}" tofile="${build.classes.file}.tmp"/>
            <x-sencha-command>fs
                minify
                --from=${basedir}/lib/openlayers/OpenLayers.debug.js
                --to=${build.compile.temp.dir}/out.js
                --closure
                and
                minify
                --from=${basedir}/lib/filesaver/FileSaver.js
                --to=${build.compile.temp.dir}/fsout.js
                --closure
                and
                concatenate
                --from=${build.compile.temp.dir}/out.js,${basedir}/lib/jspdf/dist/jspdf.min.js,${build.compile.temp.dir}/fsout.js,${build.classes.file}.tmp
                --to=${build.classes.file}</x-sencha-command>
            <delete file="${build.compile.temp.dir}/fsout.js" />
            <delete file="${build.compile.temp.dir}/out.js" />
            <delete file="${build.classes.file}.tmp" />
        </x-run-if-true>
    </target>
    <!--
    This target compresses and concatenates the OpenLayers css with the ExtJS css.
    We need to @include the ol.css due to css file splitting.
    -->
    <target name="-after-sass">
        <x-run-if-true value="${enable.openlayers.build}">
            <move file="${app.out.css.compressed}" tofile="${app.out.css.compressed}.tmp"/>
            <copy todir="${build.dir}/img">
                <fileset dir="${app.dir}/lib/openlayers/img"/>
            </copy>
            <x-compress-css srcfile="${app.dir}/lib/openlayers/theme/default/${openlayers.stylesheet.name}"
            outfile="${build.resources.dir}/ol.css"/>
            <concat destfile="${app.out.css.compressed}">
                <header filtering="no" trimleading="yes" trim="true">@import 'ol.css';</header>
                <fileset file="${app.out.css.compressed}.tmp"/>
            </concat>
            <delete file="${app.out.css.compressed}.tmp" />
        </x-run-if-true>
    </target>
</project>
